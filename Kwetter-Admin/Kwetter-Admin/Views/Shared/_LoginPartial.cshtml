@using System.Security.Claims
@using ma.ade.Kwetter2.Admin.Interfaces
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity

@*@inject SignInManager<IdentityUser> SignInManager
    @inject UserManager<IdentityUser> UserManager
    @inject IKwetterAuthenticationService authService*@
@inject IHttpContextAccessor context
@{
    ClaimsPrincipal User = context.HttpContext.User;
}

@if (User.HasClaim(x => x.Type.Equals(ClaimTypes.Authentication)) && Convert.ToBoolean(User.FindFirstValue(ClaimTypes.Authentication)))
{
    <form asp-controller="Authentication" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-controller="User" asp-action="Details" title="Manage">Hello @User.FindFirstValue(ClaimTypes.Name)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-controller="Authentication" asp-action="Login">Login</a></li>
    </ul>
}